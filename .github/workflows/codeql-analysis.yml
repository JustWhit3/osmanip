name: "CodeQL"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '45 22 * * 0'

jobs:
  analyze:
    name: Analyze
    runs-on: ${{ matrix.os }}
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        language: [ 'cpp' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
    
    - name: Installing extra dependencies and compiling (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
       sudo apt install build-essential g++ libboost-all-dev wget unzip doctest-dev

       exprtk_sha1=ca5c577917646ddba3f71ce6d5dd7d01f351ee80
       wget https://github.com/ArashPartow/exprtk/archive/$exprtk_sha1.zip
       mv $exprtk_sha1.zip exprtk-$exprtk_sha1.zip
       unzip exprtk-$exprtk_sha1.zip
       sudo cp exprtk-$exprtk_sha1/exprtk.hpp /usr/include/
       rm -rf exprtk-*

       wget https://github.com/JustWhit3/arsenalgear-cpp/archive/main.zip
       mv main.zip arsenalgear-cpp-main.zip
       unzip arsenalgear-cpp-main.zip
       cd arsenalgear-cpp-main || exit
       make
       sudo mkdir -p /usr/include/arsenalgear
       sudo cp -r include/* /usr/include/arsenalgear
       sudo cp lib/* /usr/lib
       cd ..
       rm -rf arsenalgear-*

       make
    - name: Installing extra dependencies and compiling (MacOS)
      if: matrix.os == 'macos-latest'
      run: |
       brew install boost doctest
       
       exprtk_sha1=ca5c577917646ddba3f71ce6d5dd7d01f351ee80
       wget https://github.com/ArashPartow/exprtk/archive/$exprtk_sha1.zip
       mv $exprtk_sha1.zip exprtk-$exprtk_sha1.zip
       unzip exprtk-$exprtk_sha1.zip
       sudo cp exprtk-$exprtk_sha1/exprtk.hpp /usr/local/include
       rm -rf exprtk-*

       wget https://github.com/JustWhit3/arsenalgear-cpp/archive/main.zip
       mv main.zip arsenalgear-cpp-main.zip
       unzip arsenalgear-cpp-main.zip
       cd arsenalgear-cpp-main || exit
       make
       sudo mkdir -p /usr/local/include/arsenalgear
       sudo cp include/* /usr/local/include/arsenalgear
       sudo cp lib/* /usr/local/lib
       cd ..
       rm -rf arsenalgear-*

       make
    - name: Installing extra dependencies and compiling (Windows)
      if: matrix.os == 'windows-latest'
      run: |
       choco install unzip wget
       choco install pacman
       pacman -S mingw-w64-x86_64-boost mingw-w64-x86_64-doctest

       wget https://github.com/JustWhit3/arsenalgear-cpp/archive/main.zip
       mv main.zip arsenalgear-cpp-main.zip
       unzip arsenalgear-cpp-main.zip
       rm arsenalgear-cpp-main.zip
       cd arsenalgear-cpp-main || exit
       make
       mkdir C:/ProgramData/Chocolatey/lib/mingw/tools/install/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/arsenalgear
       cp -r include/* C:/ProgramData/Chocolatey/lib/mingw/tools/install/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/arsenalgear
       cp lib/libarsenalgear.lib C:/ProgramData/Chocolatey/lib/mingw/tools/install/mingw64/bin/../lib/gcc/
       $Env:LIBRARY_PATH+=";C:/ProgramData/Chocolatey/lib/mingw/tools/install/mingw64/bin/../lib/gcc/"
       cd ..
       rd -r arsenalgear-cpp-main

       make
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

      